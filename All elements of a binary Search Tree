/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public static List<Integer> t1(TreeNode root1,List<Integer>l1)
    {
         
         if(root1==null)
         {
             return l1;
         }

         t1(root1.left,l1);
         l1.add(root1.val);
         t1(root1.right,l1);


       return l1;



    }
     public static List<Integer> t2(TreeNode root2,List<Integer>l1)
    {
         
         if(root2==null)
         {
             return l1;
         }

         t1(root2.left,l1);
         l1.add(root2.val);
         t1(root2.right,l1);


       return l1;



    }
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {

        List<Integer>l1=new ArrayList<>();
         List<Integer>l2=new ArrayList<>();
          List<Integer>l3=new ArrayList<>();
        l1.addAll(t1(root1,l2));
         l1.addAll(t1(root2,l3));
         Collections.sort(l1);
         return l1;
        
    }
}
