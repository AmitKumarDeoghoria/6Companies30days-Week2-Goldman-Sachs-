class Solution {
    public boolean isPossible(int[] nums) {
        Map<Integer,Integer>map1=new HashMap<>();
        Map<Integer,Integer>map2=new HashMap<>();
        for(int n:nums)
        {
            map1.put(n,map1.getOrDefault(n,0)+1);
        }
        for(int n:nums)
        {
           if(map1.get(n)==0)
           {
               continue;
           }
           if(map2.getOrDefault(n,0)>0)
           {
              map2.put(n+1,map2.getOrDefault(n+1,0)+1);
              map2.put(n,map2.get(n)-1);
              

           }
           else if(map1.getOrDefault(n+1,0)>0 && map1.getOrDefault(n+2,0)>0)
           {
               map1.put(n+1,map1.get(n+1)-1);
               map1.put(n+2,map1.get(n+2)-1);
               map2.put(n+3,map2.getOrDefault(n+3,0)+1);
           }
           else
           {
               return false;
           }



            map1.put(n,map1.get(n)-1);




        }
return true;
        

        
    }
}
